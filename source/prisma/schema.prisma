generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("DB_URL")
  provider = "postgresql"
}

enum Role {
  USER
  ADMIN
}

model User {
  id           Int          @id @default(autoincrement())
  // main part
  username     String?      @unique
  firstName    String
  lastName     String
  email        String       @unique
  password     String
  // - - -
  role         Role         @default(USER)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  chats        Chat[]       @relation("Participants")
  sentMessages Message[]    @relation("Sender")
  friends      Friendship[] @relation("Friends")
  friended     Friendship[] @relation("Friended")
}

model Friendship {
  id           Int          @id @default(autoincrement())
  from         User         @relation("Friends", fields: [fromId], references: [id])
  fromId       Int
  to           User         @relation("Friended", fields: [toId], references: [id])
  toId         Int
  createdAt    DateTime     @default(now())
}

model Chat {
  id           Int          @id @default(autoincrement())
  chatId       String       @unique
  participants User[]       @relation("Participants")
  messages     Message[]    @relation("Messages")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Message {
  id           Int          @id @default(autoincrement())
  sender       User         @relation("Sender", fields: [senderId], references: [id])
  senderId     Int
  text         String
  chat         Chat         @relation("Messages" ,fields: [chatId], references: [chatId])
  chatId       String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}